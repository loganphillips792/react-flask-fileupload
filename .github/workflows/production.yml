name: Development Workflow
on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test_backend:
    name: Test Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          echo "PYTHON VERSION IS $(python --version)"
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
      - name: Run Unit tests
        run: |
          # To extract percentage: https://unix.stackexchange.com/questions/690810/using-sed-to-parse-score
          COVERAGE=$(pytest --verbose --doctest-modules --color=yes --cov=app --cov-report=term | grep TOTAL | sed 's/.*[[:blank:]]//')
          echo "overall test coverage is $COVERAGE"
          COVERAGE_REMOVE_PERCENT=$(echo $COVERAGE | sed 's/\%//g')
          if [[ $COVERAGE_REMOVE_PERCENT -lt 75 ]]
          then
            echo "COVERAGE IS BELOW THRESHOLD";
            # exit 1
          else 
            echo "COVERAGE IS ABOVE THRESHOLD, CONTINUING";
          fi
  lint_backend:
      name: Lint Backend
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          echo "PYTHON VERSION IS $(python --version)"
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
      - name: Run Linting
        run: |
          pylint --fail-under=$FAIL_UNDER backend/app
        env:
          FAIL_UNDER: 5
  push_to_registry:
    environment: production
    name: Push Docker image to Docker hub
    runs-on: ubuntu-latest
    needs:
      - test_backend
      - lint_backend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: dockedupstream/digitaloceanpythondevelopment
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          # Action uses this to find the Docker file: ({context}/Dockerfile)
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}